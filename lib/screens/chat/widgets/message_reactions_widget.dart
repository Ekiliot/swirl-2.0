import 'package:flutter/material.dart';

class MessageReactionsWidget extends StatelessWidget {
  final VoidCallback? onReactionSelected;
  final bool showAbove; // –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å —Å–≤–µ—Ä—Ö—É –∏–ª–∏ —Å–Ω–∏–∑—É
  final double menuWidth; // –®–∏—Ä–∏–Ω–∞ –º–µ–Ω—é –¥–ª—è –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è

  const MessageReactionsWidget({
    super.key,
    this.onReactionSelected,
    this.showAbove = false,
    required this.menuWidth,
  });

  static const List<String> reactions = [
    'üòÄ', 'ü§£', 'üòÖ', 'üòç', 'üòò', 'üòé', 'üòâ', 'üòã', 'ü§ó', 'ü§©',
    'ü§®', 'üòê', 'üòë', 'üôÑ', 'üòè', 'üò•', 'üòØ', 'üò¥', 'ü•±', 'üò´',
    'üò®', 'ü•≥', 'üòà', 'üëø', 'üíÄ', 'üí©', 'üëç', 'üëé', 'üçÜ', 'üçë',
    'üåö', 'üåù', '‚ù§Ô∏è', '‚ù§Ô∏è‚Äçüî•', 'üíî', 'ü§°', // –∫–ª–æ—É–Ω –≤ –∫–æ–Ω—Ü–µ
  ];

  @override
  Widget build(BuildContext context) {
    return Container(
      width: menuWidth, // –¢–æ—á–Ω–æ —Ç–∞–∫–∞—è –∂–µ —à–∏—Ä–∏–Ω–∞ –∫–∞–∫ —É –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–≥–æ –º–µ–Ω—é
      height: 60,
      decoration: BoxDecoration(
        color: Colors.white,
        borderRadius: BorderRadius.circular(16),
        boxShadow: [
          BoxShadow(
            color: Colors.black.withOpacity(0.1),
            blurRadius: 8,
            offset: Offset(0, 2),
          ),
        ],
      ),
      child: SingleChildScrollView(
        scrollDirection: Axis.horizontal,
        child: Row(
          mainAxisAlignment: MainAxisAlignment.start,
          children: reactions.map((emoji) => _buildReactionButton(emoji)).toList(),
        ),
      ),
    );
  }

  Widget _buildReactionButton(String emoji) {
    // –í—ã—á–∏—Å–ª—è–µ–º —Ä–∞–∑–º–µ—Ä —ç–º–æ–¥–∑–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ —à–∏—Ä–∏–Ω—ã –º–µ–Ω—é
    final double emojiSize = (menuWidth / 8).clamp(24.0, 32.0); // 8 —ç–º–æ–¥–∑–∏ –Ω–∞ —ç–∫—Ä–∞–Ω–µ
    final double buttonWidth = menuWidth / reactions.length; // –†–∞–≤–Ω–æ–º–µ—Ä–Ω–æ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ
    
    return GestureDetector(
      onTap: () {
        onReactionSelected?.call();
        print('–í—ã–±—Ä–∞–Ω–∞ —Ä–µ–∞–∫—Ü–∏—è: $emoji');
      },
      child: Container(
        width: buttonWidth,
        height: 44,
        child: Center(
          child: Text(
            emoji,
            style: TextStyle(fontSize: emojiSize),
          ),
        ),
      ),
    );
  }

  /// –ü–æ–∫–∞–∑–∞—Ç—å –≤–∏–¥–∂–µ—Ç —Ä–µ–∞–∫—Ü–∏–π
  static OverlayEntry show({
    required BuildContext context,
    required Offset position,
    required double menuWidth,
    required bool showAbove,
    VoidCallback? onReactionSelected,
  }) {
    late OverlayEntry overlayEntry;
    
    overlayEntry = OverlayEntry(
      builder: (context) => Positioned(
        left: position.dx,
        top: showAbove 
            ? position.dy - 70 // –ü–ª–æ—Ç–Ω–æ –Ω–∞–¥ –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã–º –º–µ–Ω—é (60px –≤—ã—Å–æ—Ç–∞ + 10px –æ—Ç—Å—Ç—É–ø)
            : position.dy + 320, // –ü–ª–æ—Ç–Ω–æ –ø–æ–¥ –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã–º –º–µ–Ω—é (320px –≤—ã—Å–æ—Ç–∞ –º–µ–Ω—é)
        child: Material(
          color: Colors.transparent,
          child: MessageReactionsWidget(
            showAbove: showAbove,
            menuWidth: menuWidth,
            onReactionSelected: () {
              overlayEntry.remove(); // –£–¥–∞–ª—è–µ–º overlay –ø—Ä–∏ –≤—ã–±–æ—Ä–µ
              onReactionSelected?.call();
            },
          ),
        ),
      ),
    );

    Overlay.of(context).insert(overlayEntry);
    return overlayEntry;
  }
}
