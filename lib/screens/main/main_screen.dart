import 'dart:ui';
import 'package:flutter/material.dart';
import 'package:google_fonts/google_fonts.dart';
import 'package:eva_icons_flutter/eva_icons_flutter.dart';
import 'package:animations/animations.dart';
import '../../theme/app_theme.dart';
import '../match/match_screen.dart';
import '../chat/chat_screen.dart';
import '../chat_roulette/chat_roulette_screen.dart';
import '../profile/profile_screen.dart';
import '../notifications/notifications_screen.dart';

class MainScreen extends StatefulWidget {
  const MainScreen({super.key});

  @override
  State<MainScreen> createState() => _MainScreenState();
}

class _MainScreenState extends State<MainScreen> {
  final ScrollController _scrollController = ScrollController();
  double _matchCardHeight = 220.0; // –ù–∞—á–∏–Ω–∞–µ–º —Å –ø–æ–ª–Ω–æ–π –≤—ã—Å–æ—Ç—ã (—Ä–∞—Å–∫—Ä—ã—Ç–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ)
  static const double _minHeight = 80.0;
  static const double _maxHeight = 220.0;

  @override
  void initState() {
    super.initState();
    _scrollController.addListener(_onScroll);
  }

  @override
  void dispose() {
    _scrollController.removeListener(_onScroll);
    _scrollController.dispose();
    super.dispose();
  }

  void _onScroll() {
    final offset = _scrollController.offset;
    
    double newHeight;
    
    if (offset <= 0) {
      // Pull to refresh zone –∏–ª–∏ –≤ —Å–∞–º–æ–º –≤–µ—Ä—Ö—É - —Ä–∞—Å–∫—Ä—ã–≤–∞–µ–º –∫–∞—Ä—Ç–æ—á–∫–∏
      newHeight = _maxHeight;
    } else if (offset > 0 && offset < 150) {
      // –ù–∞—á–∏–Ω–∞–µ–º —Å–∫—Ä–æ–ª–ª–∏—Ç—å –≤–Ω–∏–∑ - –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ —Å–≤–æ—Ä–∞—á–∏–≤–∞–µ–º
      final progress = offset / 150;
      newHeight = _maxHeight - ((progress * ((_maxHeight - _minHeight))));
    } else {
      // –î–∞–ª–µ–∫–æ –ø—Ä–æ–∫—Ä—É—Ç–∏–ª–∏ –≤–Ω–∏–∑ - –º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –≤—ã—Å–æ—Ç–∞
      newHeight = _minHeight;
    }

    if ((newHeight - _matchCardHeight).abs() > 1) {
      setState(() {
        _matchCardHeight = newHeight.clamp(_minHeight, _maxHeight);
      });
    }
  }

  static const List<Map<String, dynamic>> _chats = [
    {
      'name': '–ê–Ω–Ω–∞',
      'message': '–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –¥–µ–ª–∞? üòä',
      'time': '2 –º–∏–Ω',
      'unread': 2,
      'avatar': '–ê',
    },
    {
      'name': '–ú–∞–∫—Å–∏–º',
      'message': '–•–æ—á–µ—à—å –ø–æ–π—Ç–∏ –≤ –∫–∏–Ω–æ?',
      'time': '15 –º–∏–Ω',
      'unread': 0,
      'avatar': '–ú',
    },
    {
      'name': '–ï–ª–µ–Ω–∞',
      'message': '–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–µ—á–µ—Ä!',
      'time': '1 —á',
      'unread': 1,
      'avatar': '–ï',
    },
    {
      'name': '–î–º–∏—Ç—Ä–∏–π',
      'message': '–£–≤–∏–¥–∏–º—Å—è –∑–∞–≤—Ç—Ä–∞',
      'time': '3 —á',
      'unread': 0,
      'avatar': '–î',
    },
    {
      'name': '–°–æ—Ñ–∏—è',
      'message': '–ö–ª–∞—Å—Å–Ω–æ –ø—Ä–æ–≤–µ–ª–∏ –≤—Ä–µ–º—è! üéâ',
      'time': '5 —á',
      'unread': 3,
      'avatar': '–°',
    },
    {
      'name': '–ê–ª–µ–∫—Å–∞–Ω–¥—Ä',
      'message': '–î–∞–≤–∞–π –≤—Å—Ç—Ä–µ—Ç–∏–º—Å—è –Ω–∞ –≤—ã—Ö–æ–¥–Ω—ã—Ö',
      'time': '8 —á',
      'unread': 0,
      'avatar': '–ê',
    },
    {
      'name': '–í–∏–∫—Ç–æ—Ä–∏—è',
      'message': '–¢—ã –≤–∏–¥–µ–ª —ç—Ç–æ—Ç —Ñ–∏–ª—å–º?',
      'time': '12 —á',
      'unread': 1,
      'avatar': '–í',
    },
    {
      'name': '–ò–≥–æ—Ä—å',
      'message': '–ü—Ä–∏–≤–µ—Ç, –∫–∞–∫ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ?',
      'time': '1 –¥',
      'unread': 0,
      'avatar': '–ò',
    },
    {
      'name': '–ú–∞—Ä–∏—è',
      'message': '–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–º–æ—â—å! üôè',
      'time': '1 –¥',
      'unread': 2,
      'avatar': '–ú',
    },
    {
      'name': '–ê—Ä—Ç—ë–º',
      'message': '–ö–æ–≥–¥–∞ –±—É–¥–µ—à—å —Å–≤–æ–±–æ–¥–µ–Ω?',
      'time': '2 –¥',
      'unread': 0,
      'avatar': '–ê',
    },
    {
      'name': '–û–ª—å–≥–∞',
      'message': '–û—Ç–ª–∏—á–Ω–∞—è –∏–¥–µ—è! üí°',
      'time': '2 –¥',
      'unread': 1,
      'avatar': '–û',
    },
    {
      'name': '–ù–∏–∫–∏—Ç–∞',
      'message': '–ü–æ–∑–¥—Ä–∞–≤–ª—è—é! üéä',
      'time': '3 –¥',
      'unread': 0,
      'avatar': '–ù',
    },
    {
      'name': '–ï–∫–∞—Ç–µ—Ä–∏–Ω–∞',
      'message': '–î–æ –≤—Å—Ç—Ä–µ—á–∏!',
      'time': '3 –¥',
      'unread': 0,
      'avatar': '–ï',
    },
    {
      'name': '–°–µ—Ä–≥–µ–π',
      'message': '–ö–∞–∫ –ø—Ä–æ—à–ª–∏ –≤—ã—Ö–æ–¥–Ω—ã–µ?',
      'time': '4 –¥',
      'unread': 0,
      'avatar': '–°',
    },
    {
      'name': '–¢–∞—Ç—å—è–Ω–∞',
      'message': '–ó–≤–æ–Ω–∏ –∫–æ–≥–¥–∞ –æ—Å–≤–æ–±–æ–¥–∏—à—å—Å—è',
      'time': '5 –¥',
      'unread': 1,
      'avatar': '–¢',
    },
    {
      'name': '–í–ª–∞–¥–∏–º–∏—Ä',
      'message': '–û—Ç–ª–∏—á–Ω–æ –ø–æ—Ä–∞–±–æ—Ç–∞–ª–∏! üí™',
      'time': '5 –¥',
      'unread': 0,
      'avatar': '–í',
    },
    {
      'name': '–Æ–ª–∏—è',
      'message': '–°–ø–æ–∫–æ–π–Ω–æ–π –Ω–æ—á–∏ üåô',
      'time': '6 –¥',
      'unread': 0,
      'avatar': '–Æ',
    },
    {
      'name': '–ü–∞–≤–µ–ª',
      'message': '–¢—ã –≥–¥–µ?',
      'time': '1 –Ω–µ–¥',
      'unread': 0,
      'avatar': '–ü',
    },
  ];

  static const List<Map<String, dynamic>> _matches = [
    {
      'name': '–°–æ—Ñ–∏—è',
      'age': 24,
      'gender': '–ñ–µ–Ω—Å–∫–∏–π',
      'distance': '2 –∫–º',
      'avatar': '–°',
      'hasLike': true,
      'hasSuperLike': false,
    },
    {
      'name': '–ê–ª–µ–∫—Å–µ–π',
      'age': 28,
      'gender': '–ú—É–∂—Å–∫–æ–π',
      'distance': '5 –∫–º',
      'avatar': '–ê',
      'hasLike': false,
      'hasSuperLike': true,
    },
    {
      'name': '–í–∏–∫—Ç–æ—Ä–∏—è',
      'age': 22,
      'gender': '–ñ–µ–Ω—Å–∫–∏–π',
      'distance': '1 –∫–º',
      'avatar': '–í',
      'hasLike': true,
      'hasSuperLike': false,
    },
    {
      'name': '–ò–≤–∞–Ω',
      'age': 26,
      'gender': '–ú—É–∂—Å–∫–æ–π',
      'distance': '3 –∫–º',
      'avatar': '–ò',
      'hasLike': true,
      'hasSuperLike': false,
    },
    {
      'name': '–ú–∞—Ä–∏—è',
      'age': 25,
      'gender': '–ñ–µ–Ω—Å–∫–∏–π',
      'distance': '4 –∫–º',
      'avatar': '–ú',
      'hasLike': false,
      'hasSuperLike': true,
    },
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: AppTheme.pureBlack,
      extendBodyBehindAppBar: true,
      appBar: PreferredSize(
        preferredSize: Size.fromHeight(70),
        child: ClipRRect(
          child: BackdropFilter(
            filter: ImageFilter.blur(sigmaX: 10, sigmaY: 10),
            child: Container(
              decoration: BoxDecoration(
                color: AppTheme.pureBlack.withValues(alpha: 0.3),
                border: Border(
                  bottom: BorderSide(
                    color: AppTheme.toxicYellow.withValues(alpha: 0.1),
                    width: 1,
                  ),
                ),
                borderRadius: BorderRadius.vertical(
                  bottom: Radius.circular(20),
                ),
              ),
              child: SafeArea(
                child: Padding(
                  padding: EdgeInsets.symmetric(horizontal: 16, vertical: 8),
                  child: Row(
                    children: [
                      OpenContainer(
                        transitionDuration: Duration(milliseconds: 400),
                        transitionType: ContainerTransitionType.fade,
                        openBuilder: (context, action) => ProfileScreen(),
                        closedElevation: 0,
                        closedShape: CircleBorder(),
                        closedColor: AppTheme.pureBlack,
                        openColor: AppTheme.pureBlack,
                        middleColor: AppTheme.pureBlack,
                        closedBuilder: (context, action) => Container(
                          width: 40,
                          height: 40,
                          decoration: BoxDecoration(
                            color: AppTheme.toxicYellow.withValues(alpha: 0.1),
                            shape: BoxShape.circle,
                            border: Border.all(
                              color: AppTheme.toxicYellow.withValues(alpha: 0.3),
                              width: 1,
                            ),
                          ),
                          child: Icon(
                            EvaIcons.personOutline,
                            color: AppTheme.toxicYellow,
                            size: 20,
                          ),
                        ),
                      ),
                      Expanded(
                        child: Center(
                          child: ShaderMask(
                            shaderCallback: (bounds) => LinearGradient(
                              colors: [
                                AppTheme.toxicYellow,
                                AppTheme.darkYellow,
                              ],
                            ).createShader(bounds),
                            child: Text(
                              'Swirl',
                              style: GoogleFonts.montserrat(
                                color: Colors.white,
                                fontSize: 24,
                                fontWeight: FontWeight.bold,
                                letterSpacing: 1,
                              ),
                            ),
                          ),
                        ),
                      ),
                      OpenContainer(
                        transitionDuration: Duration(milliseconds: 400),
                        transitionType: ContainerTransitionType.fade,
                        openBuilder: (context, action) => NotificationsScreen(),
                        closedElevation: 0,
                        closedShape: CircleBorder(),
                        closedColor: AppTheme.pureBlack,
                        openColor: AppTheme.pureBlack,
                        middleColor: AppTheme.pureBlack,
                        closedBuilder: (context, action) => Container(
                          width: 40,
                          height: 40,
                          decoration: BoxDecoration(
                            color: AppTheme.toxicYellow.withValues(alpha: 0.1),
                            shape: BoxShape.circle,
                            border: Border.all(
                              color: AppTheme.toxicYellow.withValues(alpha: 0.3),
                              width: 1,
                            ),
                          ),
                          child: Icon(
                            EvaIcons.bellOutline,
                            color: AppTheme.toxicYellow,
                            size: 20,
                          ),
                        ),
                      ),
                    ],
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      body: _buildBody(),
    );
  }

  Widget _buildBody() {
    return SafeArea(
      child: Container(
        decoration: BoxDecoration(
          gradient: AppTheme.backgroundGradient,
        ),
        child: Column(
          children: [
            // –°–∫—Ä–æ–ª–ª–∏—Ä—É–µ–º—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç
            Expanded(
              child: CustomScrollView(
                controller: _scrollController,
                physics: BouncingScrollPhysics(parent: AlwaysScrollableScrollPhysics()),
                slivers: [
            SliverToBoxAdapter(child: SizedBox(height: 16)),
            
            // –ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–π —Å–ø–∏—Å–æ–∫ –º–∞—Ç—á–µ–π —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π
            if (_matches.isNotEmpty) ...[
              SliverToBoxAdapter(
                child: Padding(
                  padding: EdgeInsets.symmetric(horizontal: 16),
                  child: Row(
                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                    children: [
                      Text(
                        '–ú–∞—Ç—á–∏',
                        style: GoogleFonts.montserrat(
                          color: Colors.white,
                          fontSize: 28,
                          fontWeight: FontWeight.bold,
                        ),
                      ),
                      Container(
                        padding: EdgeInsets.symmetric(horizontal: 12, vertical: 6),
                        decoration: BoxDecoration(
                          color: AppTheme.toxicYellow,
                          borderRadius: BorderRadius.circular(20),
                        ),
                        child: Text(
                          '${_matches.length}',
                          style: GoogleFonts.montserrat(
                            color: AppTheme.pureBlack,
                            fontSize: 14,
                            fontWeight: FontWeight.bold,
                          ),
                        ),
                      ),
                    ],
                  ),
                ),
              ),
              SliverToBoxAdapter(child: SizedBox(height: 16)),
              SliverToBoxAdapter(
                child: AnimatedContainer(
                  duration: Duration(milliseconds: 200),
                  curve: Curves.easeOut,
                  height: _matchCardHeight,
                  child: ListView.builder(
                    padding: EdgeInsets.symmetric(horizontal: 16),
                    scrollDirection: Axis.horizontal,
                    itemCount: _matches.length,
                    itemBuilder: (context, index) {
                      return _buildMatchCard(context, _matches[index]);
                    },
                  ),
                ),
              ),
              SliverToBoxAdapter(child: SizedBox(height: 24)),
            ],
            
            // –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å–æ–æ–±—â–µ–Ω–∏–π
            SliverToBoxAdapter(
              child: Padding(
                padding: EdgeInsets.symmetric(horizontal: 16),
                child: Row(
                  mainAxisAlignment: MainAxisAlignment.spaceBetween,
                  children: [
                    Text(
                      '–°–æ–æ–±—â–µ–Ω–∏—è',
                      style: GoogleFonts.montserrat(
                        color: Colors.white,
                        fontSize: 28,
                        fontWeight: FontWeight.bold,
                      ),
                    ),
                    Container(
                      padding: EdgeInsets.symmetric(horizontal: 12, vertical: 6),
                      decoration: BoxDecoration(
                        color: AppTheme.toxicYellow,
                        borderRadius: BorderRadius.circular(20),
                      ),
                      child: Text(
                        '${_chats.where((c) => c['unread'] > 0).length}',
                        style: GoogleFonts.montserrat(
                          color: AppTheme.pureBlack,
                          fontSize: 14,
                          fontWeight: FontWeight.bold,
                        ),
                      ),
                    ),
                  ],
                ),
              ),
            ),
            SliverToBoxAdapter(child: SizedBox(height: 20)),
            
            // –°–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤
            if (_chats.isEmpty)
              SliverFillRemaining(child: _buildEmptyChatsList())
            else
              SliverList(
                delegate: SliverChildBuilderDelegate(
                  (context, index) => Padding(
                    padding: EdgeInsets.symmetric(horizontal: 16),
                    child: _buildChatItem(context, _chats[index]),
                  ),
                  childCount: _chats.length,
                ),
              ),
            
            // –û—Ç—Å—Ç—É–ø —Å–Ω–∏–∑—É –¥–ª—è –∫–Ω–æ–ø–æ–∫
            SliverToBoxAdapter(child: SizedBox(height: 80)),
          ],
        ),
      ),
            
            // –î–≤–µ –∫–Ω–æ–ø–∫–∏ –≤–Ω–∏–∑—É (–∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω—ã)
            Container(
              padding: EdgeInsets.all(16),
              decoration: BoxDecoration(
                gradient: LinearGradient(
                  begin: Alignment.topCenter,
                  end: Alignment.bottomCenter,
                  colors: [
                    AppTheme.pureBlack.withValues(alpha: 0.0),
                    AppTheme.pureBlack.withValues(alpha: 0.95),
                    AppTheme.pureBlack,
                  ],
                  stops: [0.0, 0.3, 1.0],
                ),
              ),
              child: Row(
                children: [
                  Expanded(
                    child: Builder(
                      builder: (buttonContext) => _buildButton(
                        context: buttonContext,
                        icon: EvaIcons.messageCircle,
                        label: '–ù–æ–≤—ã–π —á–∞—Ç',
                        onTap: () {
                          Navigator.push(
                            buttonContext,
                            PageRouteBuilder(
                              pageBuilder: (context, animation, secondaryAnimation) => ChatRouletteScreen(),
                              transitionsBuilder: (context, animation, secondaryAnimation, child) {
                                const begin = Offset(1.0, 0.0);
                                const end = Offset.zero;
                                const curve = Curves.easeInOut;
                                var tween = Tween(begin: begin, end: end).chain(CurveTween(curve: curve));
                                var offsetAnimation = animation.drive(tween);
                                return SlideTransition(position: offsetAnimation, child: child);
                              },
                              transitionDuration: Duration(milliseconds: 300),
                            ),
                          );
                        },
                      ),
                    ),
                  ),
                  SizedBox(width: 12),
                  Expanded(
                    child: Builder(
                      builder: (buttonContext) => _buildButton(
                        context: buttonContext,
                        icon: EvaIcons.heart,
                        label: '–ú–∞—Ç—á',
                        onTap: () {
                          Navigator.push(
                            buttonContext,
                            MaterialPageRoute(builder: (context) => MatchScreen()),
                          );
                        },
                      ),
                    ),
                  ),
                ],
              ),
            ),
          ],
        ),
      ),
    );
  }

  Widget _buildEmptyChatsList() {
    return Center(
      child: Column(
        mainAxisAlignment: MainAxisAlignment.center,
        children: [
          Icon(
            EvaIcons.messageCircleOutline,
            color: AppTheme.toxicYellow.withValues(alpha: 0.3),
            size: 80,
          ),
          SizedBox(height: 20),
          Text(
            '–ù–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–π',
            style: GoogleFonts.montserrat(
              color: Colors.grey.shade400,
              fontSize: 18,
            ),
          ),
        ],
      ),
    );
  }

  Widget _buildChatItem(BuildContext context, Map<String, dynamic> chat) {
    return Dismissible(
      key: Key(chat['name']),
      direction: DismissDirection.horizontal,
      confirmDismiss: (direction) async {
        if (direction == DismissDirection.startToEnd) {
          // –°–≤–∞–π–ø –≤–ø—Ä–∞–≤–æ - –∑–∞–∫—Ä–µ–ø–∏—Ç—å
          ScaffoldMessenger.of(context).showSnackBar(
            SnackBar(
              content: Row(
                children: [
                  Icon(EvaIcons.pin, color: Colors.white),
                  SizedBox(width: 8),
                  Text('–ß–∞—Ç –∑–∞–∫—Ä–µ–ø–ª–µ–Ω'),
                ],
              ),
              backgroundColor: AppTheme.toxicYellow,
              behavior: SnackBarBehavior.floating,
              shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(10)),
              duration: Duration(seconds: 2),
            ),
          );
          return false;
        } else {
          // –°–≤–∞–π–ø –≤–ª–µ–≤–æ - —É–¥–∞–ª–∏—Ç—å
          return await showDialog(
            context: context,
            builder: (context) => AlertDialog(
              backgroundColor: AppTheme.darkGray,
              shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(20)),
              title: Text(
                '–£–¥–∞–ª–∏—Ç—å —á–∞—Ç?',
                style: GoogleFonts.montserrat(
                  color: Colors.white,
                  fontWeight: FontWeight.bold,
                ),
              ),
              content: Text(
                '–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —á–∞—Ç —Å ${chat['name']}?',
                style: GoogleFonts.montserrat(color: Colors.grey.shade400),
              ),
              actions: [
                TextButton(
                  onPressed: () => Navigator.pop(context, false),
                  child: Text(
                    '–û—Ç–º–µ–Ω–∞',
                    style: GoogleFonts.montserrat(color: Colors.grey.shade400),
                  ),
                ),
                ElevatedButton(
                  onPressed: () => Navigator.pop(context, true),
                  style: ElevatedButton.styleFrom(
                    backgroundColor: Colors.red,
                    shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(10)),
                  ),
                  child: Text(
                    '–£–¥–∞–ª–∏—Ç—å',
                    style: GoogleFonts.montserrat(
                      color: Colors.white,
                      fontWeight: FontWeight.bold,
                    ),
                  ),
                ),
              ],
            ),
          );
        }
      },
      background: Container(
        margin: EdgeInsets.only(bottom: 12),
        decoration: BoxDecoration(
          gradient: LinearGradient(
            colors: [
              AppTheme.toxicYellow,
              AppTheme.darkYellow,
            ],
          ),
          borderRadius: BorderRadius.circular(16),
        ),
        alignment: Alignment.centerLeft,
        padding: EdgeInsets.only(left: 20),
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            Icon(EvaIcons.pin, color: AppTheme.pureBlack, size: 28),
            SizedBox(height: 4),
            Text(
              '–ó–∞–∫—Ä–µ–ø–∏—Ç—å',
              style: GoogleFonts.montserrat(
                color: AppTheme.pureBlack,
                fontWeight: FontWeight.bold,
                fontSize: 12,
              ),
            ),
          ],
        ),
      ),
      secondaryBackground: Container(
        margin: EdgeInsets.only(bottom: 12),
        decoration: BoxDecoration(
          color: Colors.red,
          borderRadius: BorderRadius.circular(16),
        ),
        alignment: Alignment.centerRight,
        padding: EdgeInsets.only(right: 20),
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            Icon(EvaIcons.trashOutline, color: Colors.white, size: 28),
            SizedBox(height: 4),
            Text(
              '–£–¥–∞–ª–∏—Ç—å',
              style: GoogleFonts.montserrat(
                color: Colors.white,
                fontWeight: FontWeight.bold,
                fontSize: 12,
              ),
            ),
          ],
        ),
      ),
      child: Container(
        margin: EdgeInsets.only(bottom: 12),
        child: OpenContainer(
          transitionDuration: Duration(milliseconds: 400),
          transitionType: ContainerTransitionType.fade,
          openBuilder: (context, action) => ChatScreen(
            userName: chat['name'],
            userAvatar: chat['avatar'],
          ),
          closedElevation: 0,
          closedShape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(16),
          ),
          closedColor: AppTheme.pureBlack,
          openColor: AppTheme.pureBlack,
          middleColor: AppTheme.pureBlack,
          closedBuilder: (context, action) => Container(
            decoration: BoxDecoration(
              color: AppTheme.darkGray,
              borderRadius: BorderRadius.circular(16),
              border: Border.all(
                color: AppTheme.mediumGray,
                width: 1,
              ),
            ),
            child: Padding(
              padding: EdgeInsets.all(16),
              child: Row(
                children: [
                  Container(
                    width: 50,
                    height: 50,
                    decoration: BoxDecoration(
                      shape: BoxShape.circle,
                      gradient: LinearGradient(
                        colors: [
                          AppTheme.toxicYellow,
                          AppTheme.darkYellow,
                        ],
                      ),
                    ),
                    child: Center(
                      child: Text(
                        chat['avatar'],
                        style: GoogleFonts.montserrat(
                          color: AppTheme.pureBlack,
                          fontSize: 20,
                          fontWeight: FontWeight.bold,
                        ),
                      ),
                    ),
                  ),
                  SizedBox(width: 12),
                  Expanded(
                    child: Column(
                      crossAxisAlignment: CrossAxisAlignment.start,
                      children: [
                        Row(
                          mainAxisAlignment: MainAxisAlignment.spaceBetween,
                          children: [
                            Text(
                              chat['name'],
                              style: GoogleFonts.montserrat(
                                color: Colors.white,
                                fontSize: 16,
                                fontWeight: FontWeight.bold,
                              ),
                            ),
                            Text(
                              chat['time'],
                              style: GoogleFonts.montserrat(
                                color: Colors.grey.shade500,
                                fontSize: 12,
                              ),
                            ),
                          ],
                        ),
                        SizedBox(height: 4),
                        Row(
                          children: [
                            Expanded(
                              child: Text(
                                chat['message'],
                                style: GoogleFonts.montserrat(
                                  color: Colors.grey.shade400,
                                  fontSize: 14,
                                ),
                                maxLines: 1,
                                overflow: TextOverflow.ellipsis,
                              ),
                            ),
                            if (chat['unread'] > 0)
                              Container(
                                margin: EdgeInsets.only(left: 8),
                                padding: EdgeInsets.all(6),
                                decoration: BoxDecoration(
                                  color: AppTheme.toxicYellow,
                                  shape: BoxShape.circle,
                                ),
                                child: Text(
                                  '${chat['unread']}',
                                  style: GoogleFonts.montserrat(
                                    color: AppTheme.pureBlack,
                                    fontSize: 10,
                                    fontWeight: FontWeight.bold,
                                  ),
                                ),
                              ),
                          ],
                        ),
                      ],
                    ),
                  ),
                ],
              ),
            ),
          ),
        ),
      ),
    );
  }

  Widget _buildMatchCard(BuildContext context, Map<String, dynamic> match) {
    // –í—ã—á–∏—Å–ª—è–µ–º —Ä–∞–∑–º–µ—Ä—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–µ–∫—É—â–µ–π –≤—ã—Å–æ—Ç—ã –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
    final isExpanded = _matchCardHeight > 150;
    final cardWidth = isExpanded ? 200.0 : (_matchCardHeight * 4 / 3);
    final avatarSize = isExpanded ? 56.0 : 32.0;
    final showDetails = _matchCardHeight > 120;
    
    return Container(
      width: cardWidth,
      margin: EdgeInsets.only(right: 12),
      child: OpenContainer(
        transitionDuration: Duration(milliseconds: 400),
        transitionType: ContainerTransitionType.fade,
        openBuilder: (context, action) => ProfileScreen(),
        closedElevation: 0,
        closedShape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(16)),
        closedColor: AppTheme.pureBlack,
        openColor: AppTheme.pureBlack,
        middleColor: AppTheme.pureBlack,
        closedBuilder: (context, action) => Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          mainAxisSize: MainAxisSize.min,
          children: [
            // –ö–∞—Ä—Ç–æ—á–∫–∞ —Å –∞–≤–∞—Ç–∞—Ä–æ–º (–∞–¥–∞–ø—Ç–∏–≤–Ω–∞—è)
            Stack(
              children: [
                Container(
                  height: _matchCardHeight - (showDetails ? 50 : 20),
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(16),
                    gradient: LinearGradient(
                      begin: Alignment.topLeft,
                      end: Alignment.bottomRight,
                      colors: [AppTheme.toxicYellow, AppTheme.darkYellow],
                    ),
                    boxShadow: [
                      BoxShadow(
                        color: Colors.black.withValues(alpha: 0.3),
                        blurRadius: 8,
                        offset: Offset(0, 4),
                      ),
                    ],
                  ),
                  child: Center(
                    child: Text(
                      match['avatar'],
                      style: GoogleFonts.montserrat(
                        color: AppTheme.pureBlack,
                        fontSize: avatarSize,
                        fontWeight: FontWeight.bold,
                      ),
                    ),
                  ),
                ),
                // –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –ª–∞–π–∫–∞/—Å—É–ø–µ—Ä–ª–∞–π–∫–∞
                if (match['hasSuperLike'])
                  Positioned(
                    top: 8,
                    right: 8,
                    child: Container(
                      padding: EdgeInsets.all(6),
                      decoration: BoxDecoration(
                        color: Colors.blue,
                        shape: BoxShape.circle,
                        boxShadow: [
                          BoxShadow(
                            color: Colors.blue.withValues(alpha: 0.4),
                            blurRadius: 8,
                            spreadRadius: 2,
                          ),
                        ],
                      ),
                      child: Icon(Icons.star, color: Colors.white, size: 16),
                    ),
                  )
                else if (match['hasLike'])
                  Positioned(
                    top: 8,
                    right: 8,
                    child: Container(
                      padding: EdgeInsets.all(6),
                      decoration: BoxDecoration(
                        color: Colors.pink,
                        shape: BoxShape.circle,
                        boxShadow: [
                          BoxShadow(
                            color: Colors.pink.withValues(alpha: 0.4),
                            blurRadius: 8,
                            spreadRadius: 2,
                          ),
                        ],
                      ),
                      child: Icon(Icons.favorite, color: Colors.white, size: 16),
                    ),
                  ),
              ],
            ),
            if (showDetails) ...[
              SizedBox(height: 8),
              // –ò–º—è –∏ –≤–æ–∑—Ä–∞—Å—Ç
              Row(
                children: [
                  Expanded(
                    child: Text(
                      match['name'],
                      style: GoogleFonts.montserrat(
                        color: Colors.white,
                        fontSize: 14,
                        fontWeight: FontWeight.bold,
                      ),
                      overflow: TextOverflow.ellipsis,
                    ),
                  ),
                  SizedBox(width: 4),
                  Text(
                    '${match['age']}',
                    style: GoogleFonts.montserrat(
                      color: AppTheme.toxicYellow,
                      fontSize: 14,
                      fontWeight: FontWeight.w600,
                    ),
                  ),
                ],
              ),
              SizedBox(height: 4),
              // –†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –∏ –ø–æ–ª
              Row(
                children: [
                  Icon(Icons.location_on, color: Colors.grey.shade500, size: 12),
                  SizedBox(width: 2),
                  Text(
                    match['distance'],
                    style: GoogleFonts.montserrat(
                      color: Colors.grey.shade400,
                      fontSize: 11,
                    ),
                  ),
                  SizedBox(width: 4),
                  Text('‚Ä¢', style: GoogleFonts.montserrat(color: Colors.grey.shade600, fontSize: 11)),
                  SizedBox(width: 4),
                  Expanded(
                    child: Text(
                      match['gender'],
                      style: GoogleFonts.montserrat(
                        color: Colors.grey.shade400,
                        fontSize: 11,
                      ),
                      overflow: TextOverflow.ellipsis,
                    ),
                  ),
                ],
              ),
            ],
          ],
        ),
      ),
    );
  }

  Widget _buildButton({
    required BuildContext context,
    required IconData icon,
    required String label,
    required VoidCallback onTap,
  }) {
    return SizedBox(
      height: 60,
      child: ElevatedButton(
        onPressed: onTap,
        style: ElevatedButton.styleFrom(
          backgroundColor: AppTheme.darkGray,
          foregroundColor: AppTheme.toxicYellow,
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(16),
            side: BorderSide(color: AppTheme.toxicYellow, width: 2),
          ),
          elevation: 8,
          shadowColor: AppTheme.toxicYellow.withValues(alpha: 0.3),
        ),
        child: Row(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            Icon(icon, size: 24),
            SizedBox(width: 8),
            Text(
              label,
              style: GoogleFonts.montserrat(
                fontSize: 16,
                fontWeight: FontWeight.bold,
              ),
            ),
          ],
        ),
      ),
    );
  }
}